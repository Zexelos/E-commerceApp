@using EcommerceApp.Application.Interfaces
@using EcommerceApp.Application.ViewModels.EmployeePanel
@model EcommerceApp.Application.ViewModels.EmployeePanel.ProductVM
@inject ICategoryService CategoryService
@{
    ViewData["Title"] = "Add Product";
    CategoryListVM list = await CategoryService.GetCategoriesAsync();
}
<div class="form-group">
    <label asp-for="@Model.Name"></label>
    <p><input asp-for="@Model.Name" /></p>
    <span asp-validation-for="@Model.Name" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="@Model.Description"></label>
    <p><input asp-for="@Model.Description" /></p>
    <span asp-validation-for="@Model.Description" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="@Model.UnitPrice"></label>
    <p><input asp-for="@Model.UnitPrice" /></p>
    <span asp-validation-for="@Model.UnitPrice" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="@Model.UnitsInStock"></label>
    <p><input asp-for="@Model.UnitsInStock" /></p>
    <span asp-validation-for="@Model.UnitsInStock" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="@Model.CategoryName"></label>
    @Html.DropDownListFor(x => x.CategoryName, new SelectList(list.Categories.Select(x => x.Name)), "SelectList Category", new {
    @class =
    "form-control" })
</div>
<div class="form-group">
    <label asp-for="@Model.FormFileImage"></label>
    <p><input asp-for="@Model.FormFileImage" /></p>
    <span asp-validation-for="@Model.FormFileImage" class="text-danger"></span>
</div>